[
  {
    "key": "component.ideas.enable-multiple-authors",
    "description": "Enable multiple author Ideas",
    "helper": "If enabled, ideas can be associated to multiple authors", 
    "valueType": "Boolean",
    "defaultValue": "false",
    "configTarget": "COMPONENT",
    "configTargetType": "IDEAS"
  },
  {
    "key": "component.ideas.enable-attachments",
    "description": "Enable attachments on ideas",
    "helper": "If enabled, ideas can have attachments", 
    "valueType": "Boolean",
    "defaultValue": "false",
    "configTarget": "COMPONENT",
    "configTargetType": "IDEAS"
  },
  {
    "key": "component.ideas.contribution-limit",
    "description": "Maximum number of ideas",
    "helper": "Maximum number of ideas that can be created in this phase",
    "valueType": "Integer",
    "defaultValue": "0",
    "configTarget": "COMPONENT",
    "configTargetType": "IDEAS"
  },
  {
    "key": "component.proposals.disable-collaborative-editor",
    "description": "Disable collaborative editing of proposals",
    "helper": "If disabled, the Proposal Page will not feature collaborative editing functionalities like the multi-user/real-time chat and editing of proposals",
    "valueType": "Boolean",
    "defaultValue": "false",
    "configTarget": "COMPONENT",
    "configTargetType": "PROPOSALS"
  },
  {
    "key": "component.proposals.enable-multiple-authors",
    "description": "Enable multiple author Proposals",
    "helper": "Enable support for multiple authors per proposal",
    "valueType": "Boolean",
    "defaultValue": "true",
    "configTarget": "COMPONENT",
    "configTargetType": "PROPOSALS"
  },
  {
    "key": "component.proposals.enable-attachments",
    "description": "Enable proposal attachments",
    "helper": "Enable support for attachments on proposals",
    "valueType": "Boolean",
    "defaultValue": "true",
    "configTarget": "COMPONENT",
    "configTargetType": "PROPOSALS"
  },
  {
    "key": "component.proposals.contribution-limit",
    "description": "Maximum number of proposals",
    "helper": "The maximum number of proposals that can be created in this phase",
    "valueType": "Integer",
    "defaultValue": "0",
    "configTarget": "COMPONENT",
    "configTargetType": "PROPOSALS"
  },
  {
    "key": "component.deliberation.enable-technical-assessment",
    "description": "Enable technical assessment of proposals",
    "helper": "If enabled, proposals can receive a more detailed technical assessment with more details than a simple comment",
    "valueType": "Boolean",
    "defaultValue": "true",
    "configTarget": "COMPONENT",
    "configTargetType": "DELIBERATION"
  },
  {
    "key": "component.deliberation.who-deliberates",
    "description": "Who deliberates?",
    "helper":"",
    "valueType": "String",
    "defaultValue": "ASSEMBLY",
    "configTarget": "COMPONENT",
    "configTargetType": "DELIBERATION",
    "uiType": "select",
    "options": [
      {
        "name": "All assembly members",
        "value": "ASSEMBLY",
        "selected": true
      },
      {
        "name": "Only Working Groups of this Campaign",
        "value": "CAMPAIGN_WORKING_GROUPS",
        "selected": false
      },
      {
        "name": "Randomly selected jury",
        "value": "JURY",
        "selected": false
      }
    ],
    "optionValue": {
      "name": "All assembly members",
      "value": "ASSEMBLY",
      "selected": true
    }
  },
  {
    "key": "component.deliberation.who-deliberates-jury",
    "dependsOfKey": "component.deliberation.who-deliberates",
    "dependsOfValue": "JURY",
    "description": "From where are members of the jury randomly selected?",
    "helper":"",
    "valueType": "String",
    "defaultValue": "ASSEMBLY",
    "configTarget": "COMPONENT",
    "configTargetType": "DELIBERATION",
    "uiType": "select",
    "options": [
      {
        "name": "From all assembly members",
        "value": "ASSEMBLY",
        "selected": true
      },
      {
        "name": "From Working Groups of this Campaign",
        "value": "CAMPAIGN_WORKING_GROUPS",
        "selected": false
      }
    ],
    "optionValue": {
      "name": "From all assembly members",
      "value": "ASSEMBLY",
      "selected": true
    }
  },
  {
    "key": "component.deliberation.who-deliberates-jury-percentage",
    "dependsOfKey": "component.deliberation.who-deliberates",
    "dependsOfValue": "JURY",
    "helper": "",
    "description": "What percentage of people should be on the Jury?",
    "valueType": "Percentage",
    "defaultValue": "0.1",
    "configTarget": "COMPONENT",
    "configTargetType": "DELIBERATION"
  },
  {
    "key": "component.voting.ballot.password",
    "helper": "",
    "description": "Ballot Password",
    "valueType": "String",
    "defaultValue": "12345",
    "configTarget": "COMPONENT",
    "configTargetType": "VOTING"
  },
  {
    "key": "component.voting.system",
    "helper": "",
    "description": "Select the voting system",
    "valueType": "String",
    "defaultValue": "RANGE",
    "configTarget": "COMPONENT",
    "configTargetType": "VOTING",
    "uiType": "select",
    "options": [
      {
        "name": "Range",
        "value": "RANGE",
        "selected": true
      },
      {
        "name": "Ranked",
        "value": "RANKED",
        "selected": false
      },
      {
        "name": "Distribution",
        "value": "DISTRIBUTION",
        "selected": false
      },
      {
        "name": "Plurality",
        "value": "PLURALITY",
        "selected": false
      }
    ],
    "optionValue": {
      "name": "Range",
      "value": "RANGE",
      "selected": true
    }
  },
  {
    "key": "component.voting.system-range-min-score",
    "dependsOfKey": "component.voting.system",
    "dependsOfValue": "RANGE",
    "helper": "",
    "description": "Minimum score for range voting",
    "valueType": "Integer",
    "defaultValue": "0",
    "configTarget": "COMPONENT",
    "configTargetType": "VOTING"
  },
  {
    "key": "component.voting.system-range-max-score",
    "dependsOfKey": "component.voting.system",
    "dependsOfValue": "RANGE",
    "helper": "",
    "description": "Maximum score for range voting",
    "valueType": "Integer",
    "defaultValue": "100",
    "configTarget": "COMPONENT",
    "configTargetType": "VOTING"
  },
  {
    "key": "component.voting.system-ranked-number-proposals",
    "dependsOfKey": "component.voting.system",
    "dependsOfValue": "RANKED",
    "helper": "",
    "description": "How many proposals can a voter select?",
    "valueType": "Integer",
    "defaultValue": "5",
    "configTarget": "COMPONENT",
    "configTargetType": "VOTING"
  },
  {
    "key": "component.voting.system-distributed-points",
    "dependsOfKey": "component.voting.system",
    "dependsOfValue": "DISTRIBUTED",
    "helper": "",
    "description": "How many points can a voter distribute?",
    "valueType": "Integer",
    "defaultValue": "30",
    "configTarget": "COMPONENT",
    "configTargetType": "VOTING"
  },
  {
    "key": "component.voting.system-plurality-type",
    "dependsOfKey": "component.voting.system",
    "dependsOfValue": "PLURALITY",
    "helper": "",
    "description": "Select the type of plurality voting",
    "valueType": "String",
    "defaultValue": "YES/NO",
    "configTarget": "COMPONENT",
    "configTargetType": "VOTING",
    "uiType": "select",
    "options": [
      {
        "name": "Only YES votes",
        "value": "YES",
        "selected": false
      },
      {
        "name": "YES and NO votes",
        "value": "YES/NO",
        "selected": true
      },
      {
        "name": "YES, NO, and MAYBE votes",
        "value": "YES/NO/MAYBE",
        "selected": false
      },
      {
        "name": "YES, NO, MAYBE and BLOCK votes",
        "value": "YES/NO/MAYBE/BLOCK",
        "selected": false
      }
    ],
    "optionValue": {
      "name": "YES and NO votes",
      "value": "YES/NO",
      "selected": true
    }
  },
  {
    "key": "component.voting.system-plurality-block-enforce-justification-of-votes",
    "dependsOfKey": "component.voting.system",
    "dependsOfValue": "PLURALITY",
    "helper": "",
    "description": "Require justification for votes",
    "valueType": "Boolean",
    "defaultValue": "false",
    "configTarget": "COMPONENT",
    "configTargetType": "VOTING"
  },
  {
    "key": "component.voting.system-plurality-block-threshold",
    "dependsOfKey": "component.voting.system-plurality-type",
    "dependsOfValue": "YES/NO/MAYBE/BLOCK",
    "helper": "",
    "description": "Block percentage threshold",
    "valueType": "Percentage",
    "defaultValue": "0.1",
    "configTarget": "COMPONENT",
    "configTargetType": "VOTING"
  },
  {
    "key": "component.voting.system-winners",
    "helper": "",
    "description": "Configure number of winners",
    "valueType": "String",
    "defaultValue": "FIXED",
    "configTarget": "COMPONENT",
    "configTargetType": "VOTING",
    "uiType": "radio",
    "options": [
      {
        "name": "Fixed regardless of budget",
        "value": "FIXED",
        "selected": true
      },
      {
        "name": "Dynamic 1: first N-ranked proposals that can be fully funded by available budget (may result in unspent funds)",
        "value": "DYNAMIC1",
        "selected": false
      },
      {
        "name": "Dynamic 2: first N-ranked proposals that can be fully funded by available budget, allocating all the funds (may result in 'leapfrogging')",
        "value": "DYNAMIC2",
        "selected": false
      }
    ],
    "optionValue": {
      "name": "Fixed regardless of budget",
      "value": "FIXED",
      "selected": true
    }
  },
  {
    "key": "component.voting.system-winners-fixed-number",
    "dependsOfKey": "component.voting.system-winners",
    "dependsOfValue": "FIXED",
    "helper": "",
    "description": "Number of Winners",
    "valueType": "Integer",
    "defaultValue": "3",
    "configTarget": "COMPONENT",
    "configTargetType": "VOTING"
  },
  {
    "key": "component.voting.system-enable-quorum",
    "helper": "",
    "description": "Enable Quorum threshold",
    "valueType": "Boolean",
    "defaultValue": "true",
    "configTarget": "COMPONENT",
    "configTargetType": "VOTING"
  },
  {
    "key": "component.voting.system.quorum",
    "dependsOfKey": "component.voting.system-enable-quorum",
    "dependsOfValue": "true",
    "helper": "",
    "description": "Quorum percentage",
    "valueType": "Percentage",
    "defaultValue": "0.6",
    "configTarget": "COMPONENT",
    "configTargetType": "VOTING"
  }
]